//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
namespace SqLiteEntities
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class TaxesEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new TaxesEntities object using the connection string found in the 'TaxesEntities' section of the application configuration file.
        /// </summary>
        public TaxesEntities() : base("name=TaxesEntities", "TaxesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaxesEntities object.
        /// </summary>
        public TaxesEntities(string connectionString) : base(connectionString, "TaxesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new TaxesEntities object.
        /// </summary>
        public TaxesEntities(EntityConnection connection) : base(connection, "TaxesEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Tax> Taxes
        {
            get
            {
                if ((_Taxes == null))
                {
                    _Taxes = base.CreateObjectSet<Tax>("Taxes");
                }
                return _Taxes;
            }
        }
        private ObjectSet<Tax> _Taxes;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Taxes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToTaxes(Tax tax)
        {
            base.AddObject("Taxes", tax);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="TaxesModel", Name="Tax")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Tax : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Tax object.
        /// </summary>
        /// <param name="taxProcent">Initial value of the TaxProcent property.</param>
        public static Tax CreateTax(global::System.Int64 taxProcent)
        {
            Tax tax = new Tax();
            tax.TaxProcent = taxProcent;
            return tax;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int64 TaxProcent
        {
            get
            {
                return _TaxProcent;
            }
            set
            {
                if (_TaxProcent != value)
                {
                    OnTaxProcentChanging(value);
                    ReportPropertyChanging("TaxProcent");
                    _TaxProcent = StructuralObject.SetValidValue(value, "TaxProcent");
                    ReportPropertyChanged("TaxProcent");
                    OnTaxProcentChanged();
                }
            }
        }
        private global::System.Int64 _TaxProcent;
        partial void OnTaxProcentChanging(global::System.Int64 value);
        partial void OnTaxProcentChanged();

        #endregion

    }

    #endregion

}
